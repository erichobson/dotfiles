#!/bin/zsh

function qtbuild() {
    local executable_name="main"

    # Check if CMakeLists.txt exists in the current directory
    if [[ ! -f CMakeLists.txt ]]; then
        echo "Error: CMakeLists.txt not found in the current directory."
        return 1
    fi

    # Check if build directory exists
    if [[ ! -d build ]]; then
        echo "Running CMake to generate build files..."
        # Run CMake to generate build files in 'build' directory
        cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -B build
        if [[ $? -ne 0 ]]; then
            echo "CMake configuration failed."
            return 1
        fi
    fi

    # Change into the build directory
    cd build || { echo "Failed to enter build directory."; return 1; }

    echo "Building the project..."
    # Build the project using all available CPU cores
    make -j$(sysctl -n hw.ncpu)
    build_result=$?

    # Copy or symlink compile_commands.json to the project root
    if [[ -f compile_commands.json ]]; then
        ln -sf "$(pwd)/compile_commands.json" ../compile_commands.json
    fi

    # Return to the project root directory
    cd ..

    if [[ $build_result -eq 0 ]]; then
        echo "Build completed successfully."
        # Check if the executable exists
        if [[ -f "build/$executable_name" ]]; then
            echo "You can run your application with:"
            echo "./build/$executable_name"
        else
            echo "Executable '$executable_name' not found in 'build' directory."
            echo "Please check your CMakeLists.txt for the correct executable name."
        fi
    else
        echo "Build failed."
        return 1
    fi
}

